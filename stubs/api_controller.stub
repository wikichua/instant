<?php

namespace {%api_controller_namespace%};

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use {%model_namespace%}\{%model_class%};

class {%model_class%}Controller extends Controller
{
    public function index(Request $request)
    {
        $models = {%model_class%}::query()
            ->filter($request->get('filters', ''))
            ->sorting($request->get('sort', ''),$request->get('direction', ''));
        $paginated = $models->paginate(25);
        foreach ($paginated as $model) {
            // $model->actionsView = view('admin.{%model_variable%}.actions',compact('model'))->render();
        }
        if ($request->get('filters','') != '') {
            $paginated->appends(['filters' => $request->get('filters','')]);
        }
        if ($request->get('sort','') != '') {
            $paginated->appends(['sort' => $request->get('sort',''), 'direction' => $request->get('direction','asc')]);
        }
        $currentUrl = $request->fullUrl();
        return response()->json([
              'status_code' => 200,
              'data' => compact('paginated','currentUrl'),
        ]);
    }

    public function store(Request $request)
    {
        $request->validate([
            {%validations_create%}
        ]);
        {%upload_strings%}
        $request->merge([
            'created_by' => auth()->id(),
            'updated_by' => auth()->id(),
        ]);

        $model = {%model_class%}::query()->create($request->input());

        activity('Created {%model_class%}: ' . $model->id, $request->input(), $model);

        return response()->json([
            'status_code' => 200,
            'data' => $model,
        ]);
    }

    public function show({%model_class%} $model)
    {
        return response()->json([
            'status_code' => 200,
            'data' => $model,
        ]);
    }

    public function update(Request $request, {%model_class%} $model)
    {
        $request->validate([
            {%validations_update%}
        ]);
        {%upload_strings%}
        $request->merge([
            'updated_by' => auth()->id(),
        ]);

        $model->update($request->input());

        activity('Updated {%model_class%}: ' . $model->id, $request->input(), $model);

        return response()->json([
            'status_code' => 200,
            'data' => $model,
        ]);
    }

    public function destroy({%model_class%} $model)
    {
        $model->delete();

        activity('Deleted {%model_class%}: ' . $model->id, [], $model);

        return response()->json([
            'status_code' => 200,
        ]);
    }
}
